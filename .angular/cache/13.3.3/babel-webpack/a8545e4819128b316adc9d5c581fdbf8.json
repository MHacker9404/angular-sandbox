{"ast":null,"code":"import _asyncToGenerator from \"/workspace/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Subject } from 'rxjs';\nimport Ingredient from '../shared/ingredient.model';\nimport * as i0 from \"@angular/core\";\nexport default class ShoppingListService {\n  constructor() {\n    var _this = this;\n\n    this._ingredients = [new Ingredient('apples', 5), new Ingredient('tomatoes', 10)];\n    this.startedEditing = new Subject(); // ingredientsChanged: EventEmitter<Ingredient[]> = new EventEmitter<Ingredient[]>();\n\n    this.ingredientsChanged = new Subject();\n\n    this.getIngredient = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (index) {\n        return Object.assign({}, _this._ingredients[index]);\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.addIngredient = ingredient => {\n      this._ingredients.push(ingredient);\n\n      this.ingredientsChanged.next(this._ingredients.slice());\n    };\n\n    this.addIngredients = ingredients => {\n      this._ingredients.push(...ingredients);\n\n      this.ingredientsChanged.next(this._ingredients.slice());\n    };\n  }\n\n  get ingredients() {\n    return this._ingredients.slice();\n  }\n\n}\n\nShoppingListService.ɵfac = function ShoppingListService_Factory(t) {\n  return new (t || ShoppingListService)();\n};\n\nShoppingListService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShoppingListService,\n  factory: ShoppingListService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/workspace/apps/mod03/src/app/shopping-list/shopping-list.service.ts"],"names":["Subject","Ingredient","i0","ShoppingListService","constructor","_ingredients","startedEditing","ingredientsChanged","getIngredient","index","Object","assign","addIngredient","ingredient","push","next","slice","addIngredients","ingredients","ɵfac","ShoppingListService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,eAAe,MAAMC,mBAAN,CAA0B;AACrCC,EAAAA,WAAW,GAAG;AAAA;;AACV,SAAKC,YAAL,GAAoB,CAAC,IAAIJ,UAAJ,CAAe,QAAf,EAAyB,CAAzB,CAAD,EAA8B,IAAIA,UAAJ,CAAe,UAAf,EAA2B,EAA3B,CAA9B,CAApB;AACA,SAAKK,cAAL,GAAsB,IAAIN,OAAJ,EAAtB,CAFU,CAGV;;AACA,SAAKO,kBAAL,GAA0B,IAAIP,OAAJ,EAA1B;;AACA,SAAKQ,aAAL;AAAA,mCAAqB,WAAOC,KAAP,EAAiB;AAClC,eAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAI,CAACN,YAAL,CAAkBI,KAAlB,CAAlB,CAAP;AACH,OAFD;;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAKG,aAAL,GAAsBC,UAAD,IAAgB;AACjC,WAAKR,YAAL,CAAkBS,IAAlB,CAAuBD,UAAvB;;AACA,WAAKN,kBAAL,CAAwBQ,IAAxB,CAA6B,KAAKV,YAAL,CAAkBW,KAAlB,EAA7B;AACH,KAHD;;AAIA,SAAKC,cAAL,GAAuBC,WAAD,IAAiB;AACnC,WAAKb,YAAL,CAAkBS,IAAlB,CAAuB,GAAGI,WAA1B;;AACA,WAAKX,kBAAL,CAAwBQ,IAAxB,CAA6B,KAAKV,YAAL,CAAkBW,KAAlB,EAA7B;AACH,KAHD;AAIH;;AACc,MAAXE,WAAW,GAAG;AACd,WAAO,KAAKb,YAAL,CAAkBW,KAAlB,EAAP;AACH;;AApBoC;;AAsBzCb,mBAAmB,CAACgB,IAApB,GAA2B,SAASC,2BAAT,CAAqCC,CAArC,EAAwC;AAAE,SAAO,KAAKA,CAAC,IAAIlB,mBAAV,GAAP;AAA0C,CAA/G;;AACAA,mBAAmB,CAACmB,KAApB,GAA4B,aAAcpB,EAAE,CAACqB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAErB,mBAAT;AAA8BsB,EAAAA,OAAO,EAAEtB,mBAAmB,CAACgB,IAA3D;AAAiEO,EAAAA,UAAU,EAAE;AAA7E,CAAtB,CAA1C","sourcesContent":["import { Subject } from 'rxjs';\nimport Ingredient from '../shared/ingredient.model';\nimport * as i0 from \"@angular/core\";\nexport default class ShoppingListService {\n    constructor() {\n        this._ingredients = [new Ingredient('apples', 5), new Ingredient('tomatoes', 10)];\n        this.startedEditing = new Subject();\n        // ingredientsChanged: EventEmitter<Ingredient[]> = new EventEmitter<Ingredient[]>();\n        this.ingredientsChanged = new Subject();\n        this.getIngredient = async (index) => {\n            return Object.assign({}, this._ingredients[index]);\n        };\n        this.addIngredient = (ingredient) => {\n            this._ingredients.push(ingredient);\n            this.ingredientsChanged.next(this._ingredients.slice());\n        };\n        this.addIngredients = (ingredients) => {\n            this._ingredients.push(...ingredients);\n            this.ingredientsChanged.next(this._ingredients.slice());\n        };\n    }\n    get ingredients() {\n        return this._ingredients.slice();\n    }\n}\nShoppingListService.ɵfac = function ShoppingListService_Factory(t) { return new (t || ShoppingListService)(); };\nShoppingListService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ShoppingListService, factory: ShoppingListService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}