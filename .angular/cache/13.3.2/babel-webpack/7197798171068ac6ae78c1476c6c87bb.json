{"ast":null,"code":"import _asyncToGenerator from \"/workspace/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport Recipe from './recipe.model';\nimport Ingredient from '../shared/ingredient.model';\nimport * as i0 from \"@angular/core\";\nexport default class RecipeService {\n  constructor() {\n    var _this = this;\n\n    this._recipes = [new Recipe('Test', 'A test recipe description', 'https://www.cookipedia.co.uk/wiki/images/e/e3/Prawn_thermidor_recipe.jpg', [new Ingredient('apples', 5), new Ingredient('tomatoes', 10)]), new Recipe('Another Test Recipe', 'A test recipe description', 'https://www.cookipedia.co.uk/wiki/images/e/e3/Prawn_thermidor_recipe.jpg', [new Ingredient('apples', 5), new Ingredient('tomatoes', 10)])];\n\n    this.getRecipe = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (index) {\n        return Object.assign({}, _this._recipes[index]);\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.recipeSelected = new EventEmitter();\n  }\n\n  get recipes() {\n    return this._recipes.slice();\n  }\n\n}\n\nRecipeService.ɵfac = function RecipeService_Factory(t) {\n  return new (t || RecipeService)();\n};\n\nRecipeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RecipeService,\n  factory: RecipeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/workspace/apps/mod03/src/app/recipes/recipe.service.ts"],"names":["EventEmitter","Recipe","Ingredient","i0","RecipeService","constructor","_recipes","getRecipe","index","Object","assign","recipeSelected","recipes","slice","ɵfac","RecipeService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,eAAe,MAAMC,aAAN,CAAoB;AAC/BC,EAAAA,WAAW,GAAG;AAAA;;AACV,SAAKC,QAAL,GAAgB,CACZ,IAAIL,MAAJ,CAAW,MAAX,EAAmB,2BAAnB,EAAgD,0EAAhD,EAA4H,CAAC,IAAIC,UAAJ,CAAe,QAAf,EAAyB,CAAzB,CAAD,EAA8B,IAAIA,UAAJ,CAAe,UAAf,EAA2B,EAA3B,CAA9B,CAA5H,CADY,EAEZ,IAAID,MAAJ,CAAW,qBAAX,EAAkC,2BAAlC,EAA+D,0EAA/D,EAA2I,CAAC,IAAIC,UAAJ,CAAe,QAAf,EAAyB,CAAzB,CAAD,EAA8B,IAAIA,UAAJ,CAAe,UAAf,EAA2B,EAA3B,CAA9B,CAA3I,CAFY,CAAhB;;AAIA,SAAKK,SAAL;AAAA,mCAAiB,WAAOC,KAAP,EAAiB;AAC9B,eAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAI,CAACJ,QAAL,CAAcE,KAAd,CAAlB,CAAP;AACH,OAFD;;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAKG,cAAL,GAAsB,IAAIX,YAAJ,EAAtB;AACH;;AACU,MAAPY,OAAO,GAAG;AACV,WAAO,KAAKN,QAAL,CAAcO,KAAd,EAAP;AACH;;AAb8B;;AAenCT,aAAa,CAACU,IAAd,GAAqB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAIZ,aAAV,GAAP;AAAoC,CAA7F;;AACAA,aAAa,CAACa,KAAd,GAAsB,aAAcd,EAAE,CAACe,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEf,aAAT;AAAwBgB,EAAAA,OAAO,EAAEhB,aAAa,CAACU,IAA/C;AAAqDO,EAAAA,UAAU,EAAE;AAAjE,CAAtB,CAApC","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport Recipe from './recipe.model';\nimport Ingredient from '../shared/ingredient.model';\nimport * as i0 from \"@angular/core\";\nexport default class RecipeService {\n    constructor() {\n        this._recipes = [\n            new Recipe('Test', 'A test recipe description', 'https://www.cookipedia.co.uk/wiki/images/e/e3/Prawn_thermidor_recipe.jpg', [new Ingredient('apples', 5), new Ingredient('tomatoes', 10)]),\n            new Recipe('Another Test Recipe', 'A test recipe description', 'https://www.cookipedia.co.uk/wiki/images/e/e3/Prawn_thermidor_recipe.jpg', [new Ingredient('apples', 5), new Ingredient('tomatoes', 10)]),\n        ];\n        this.getRecipe = async (index) => {\n            return Object.assign({}, this._recipes[index]);\n        };\n        this.recipeSelected = new EventEmitter();\n    }\n    get recipes() {\n        return this._recipes.slice();\n    }\n}\nRecipeService.ɵfac = function RecipeService_Factory(t) { return new (t || RecipeService)(); };\nRecipeService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: RecipeService, factory: RecipeService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}